/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, History as PrismaHistory } from "@prisma/client";

export class HistoryServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.HistoryCountArgs, "select">): Promise<number> {
    return this.prisma.history.count(args);
  }

  async histories(args: Prisma.HistoryFindManyArgs): Promise<PrismaHistory[]> {
    return this.prisma.history.findMany(args);
  }
  async history(
    args: Prisma.HistoryFindUniqueArgs
  ): Promise<PrismaHistory | null> {
    return this.prisma.history.findUnique(args);
  }
  async createHistory(args: Prisma.HistoryCreateArgs): Promise<PrismaHistory> {
    return this.prisma.history.create(args);
  }
  async updateHistory(args: Prisma.HistoryUpdateArgs): Promise<PrismaHistory> {
    return this.prisma.history.update(args);
  }
  async deleteHistory(args: Prisma.HistoryDeleteArgs): Promise<PrismaHistory> {
    return this.prisma.history.delete(args);
  }
}
